{"version":3,"sources":["App.js","web-build/register-service-worker.js"],"names":["HomeScreen","route","navigation","txt","params","score","style","flex","alignItems","justifyContent","onPress","navigate","Math","floor","random","title","color","GameScreen","rand1","rand2","useState","text","setText","padding","fontSize","keyboardType","borderColor","marginBottom","textAlign","width","placeholder","onChangeText","defaultValue","push","Number","JSON","stringify","Stack","createStackNavigator","App","Navigator","initialRouteName","Screen","name","component","options","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console"],"mappings":"kKAMA,SAASA,EAAT,GAA0C,IAArBC,EAAoB,EAApBA,MAAMC,EAAc,EAAdA,WACtBC,EAAI,GAIP,OAHgB,MAAdF,EAAMG,SACRD,EAAI,mBAAmBF,EAAMG,OAAOC,OAGlC,gBAAC,IAAD,CAAMC,MAAO,CAAEC,KAAM,EAAGC,WAAY,SAAUC,eAAgB,WAC1D,gBAAC,IAAD,CACEC,QAAS,kBAAMR,EAAWS,SAAS,OAAO,CAAC,MAAS,EAAE,MAAQC,KAAKC,MAAsB,GAAhBD,KAAKE,UAAe,MAAQF,KAAKC,MAAqB,GAAfD,KAAKE,aACrHC,MAAM,aACNC,MAAM,YAEb,gBAAC,IAAD,KAAOb,IAKV,SAASc,EAAT,GAA2C,IAAtBhB,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,WAAc,EACXD,EAAMG,OAA5BC,EADiC,EACjCA,MAAOa,EAD0B,EAC1BA,MAAMC,EADoB,EACpBA,MADoB,EAEhBC,mBAAS,IAFO,WAEjCC,EAFiC,KAE3BC,EAF2B,KAGxC,OACE,gBAAC,IAAD,CAAMhB,MAAO,CAAEC,KAAM,EAAGC,WAAY,SAAUC,eAAgB,WAC1D,gBAAC,IAAD,CAAMH,MAAO,CAACiB,QAAS,GAAIC,SAAU,KAAMN,EAA3C,IAAmDC,GACnD,gBAAC,IAAD,CACLM,aAAa,UACPnB,MAAO,CAACoB,YAAY,OAAOC,aAAa,GAAIC,UAAU,SAASC,MAAO,IAAIN,QAAS,IACnFO,YAAY,qBACZC,aAAc,SAAAV,GAAI,OAAIC,EAAQD,IAC9BW,aAAcX,IAEf,gBAAC,IAAD,CACEX,QAASW,GAAMH,EAAMC,EAAQ,kBAAKjB,EAAW+B,KAAK,OAAO,CAAC,MAAQ5B,EAAM,EAAE,MAASO,KAAKC,MAAsB,GAAhBD,KAAKE,UAAe,MAAQF,KAAKC,MAAoB,GAAdD,KAAKE,aAAiB,kBAAKZ,EAAWS,SAAS,OAAO,CAAC,MAAQN,KACpMU,MAAM,SACNC,MAAM,YAER,gBAAC,IAAD,CAAMV,MAAO,CAACiB,QAAS,GAAIC,SAAU,KAArC,WACWU,OAAOC,KAAKC,UAAU/B,MAMzC,IAAMgC,EAAQC,cAqBCC,IAnBf,WACE,OACE,gBAAC,IAAD,KACE,gBAACF,EAAMG,UAAP,CAAiBC,iBAAiB,QAChC,gBAACJ,EAAMK,OAAP,CACEC,KAAK,OACLC,UAAW5C,EACX6C,QAAS,CAAC9B,MAAM,UAElB,gBAACsB,EAAMK,OAAP,CACEC,KAAK,OACLC,UAAW3B,EACX4B,QAAS,CAAC9B,MAAM,c,+DC5DtB,kBAAmB+B,WACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cACPC,SAAS,4CAA6C,CAAEC,MAAO,wBAC/DC,MAAK,SAAUC,OAGfC,OAAM,SAAUC,GACfC,QAAQH,KAAK,oCAAqCE,W","file":"static/js/app.f69795a0.chunk.js","sourcesContent":["import {useState} from 'react';\r\nimport * as React from 'react';\r\nimport { Button, View, Text, TextInput } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nfunction HomeScreen({route,navigation }) {\r\n\tlet txt=\"\";\r\n\tif(route.params!=null){\r\n\t\ttxt=\"Previous score: \"+route.params.score;\r\n\t}\r\n  return (\r\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n        <Button\r\n          onPress={() => navigation.navigate(\"Game\",{\"score\": 0,\"rand1\":Math.floor(Math.random() * 10),\"rand2\":Math.floor(Math.random() *10)})} \r\n          title=\"Start Game\"\r\n          color=\"#841584\"\r\n        />\r\n\t  <Text>{txt}</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction GameScreen({route, navigation }) {\r\n  const {score, rand1,rand2} = route.params\r\n  const [text, setText] = useState('');\r\n  return (\r\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n        <Text style={{padding: 10, fontSize: 60}}>{rand1}+{rand2}</Text>\r\n        <TextInput\r\n\t  keyboardType='numeric'  \r\n         style={{borderColor:'gray',marginBottom:20, textAlign:'center',width: 250,padding: 10}}\r\n         placeholder=\"Enter the addition\"\r\n         onChangeText={text => setText(text)}\r\n         defaultValue={text}\r\n       />\r\n        <Button\r\n          onPress={text==rand1+rand2 ? () =>navigation.push(\"Game\",{\"score\":score+1,\"rand1\": Math.floor(Math.random() * 10),\"rand2\":Math.floor(Math.random()*10)}) : () =>navigation.navigate(\"Home\",{\"score\":score})}\r\n          title=\"Submit\"\r\n          color=\"#841584\"\r\n        />\r\n        <Text style={{padding: 10, fontSize: 30}}>\r\n          Score : {Number(JSON.stringify(score))}\r\n        </Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nfunction App() {\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator initialRouteName=\"Home\">\r\n        <Stack.Screen \r\n          name=\"Home\" \r\n          component={HomeScreen} \r\n          options={{title:\"Home\"}}\r\n        />\r\n        <Stack.Screen \r\n          name=\"Game\" \r\n          component={GameScreen} \r\n          options={{title:\"Game\"}}\r\n        />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-react-native/expo-service-worker.js', { scope: '/expo-react-native/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}